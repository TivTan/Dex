{"ast":null,"code":"var _jsxFileName = \"/home/tivtan/Desktop/DEX/hardhat-react-boilerplate/frontend/src/hardhat/SymfoniContext.tsx\",\n    _s = $RefreshSig$();\n\n/* Autogenerated file. Do not edit manually. */\n\n/* tslint:disable */\n\n/* eslint-disable */\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { MyToken1__factory } from \"./typechain/factories/MyToken1__factory\";\nimport { MyToken2__factory } from \"./typechain/factories/MyToken2__factory\";\nimport { UniswapV2ERC20__factory } from \"./typechain/factories/UniswapV2ERC20__factory\";\nimport { UniswapV2Factory__factory } from \"./typechain/factories/UniswapV2Factory__factory\";\nimport { UniswapV2Pair__factory } from \"./typechain/factories/UniswapV2Pair__factory\";\nimport { UniswapV2Router02__factory } from \"./typechain/factories/UniswapV2Router02__factory\";\nimport { ERC20PresetMinterPauser__factory } from \"./typechain/factories/ERC20PresetMinterPauser__factory\";\nimport { ERC20__factory } from \"./typechain/factories/ERC20__factory\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyContract = {\n  instance: undefined,\n  factory: undefined\n};\nconst defaultProvider = undefined;\nexport const ProviderContext = /*#__PURE__*/React.createContext([defaultProvider, () => {}]);\nconst defaultCurrentAddress = \"\";\nexport const CurrentAddressContext = /*#__PURE__*/React.createContext([defaultCurrentAddress, () => {}]);\nconst defaultSigner = undefined;\nexport const SignerContext = /*#__PURE__*/React.createContext([defaultSigner, () => {}]);\nconst defaultSymfoniContext = {\n  currentHardhatProvider: \"\",\n  init: () => {\n    throw Error(\"Symfoni context not initialized\");\n  },\n  loading: false,\n  messages: [],\n  providers: []\n};\nexport const SymfoniContext = /*#__PURE__*/React.createContext(defaultSymfoniContext);\nexport const MyToken1Context = /*#__PURE__*/React.createContext(emptyContract);\nexport const MyToken2Context = /*#__PURE__*/React.createContext(emptyContract);\nexport const UniswapV2ERC20Context = /*#__PURE__*/React.createContext(emptyContract);\nexport const UniswapV2FactoryContext = /*#__PURE__*/React.createContext(emptyContract);\nexport const UniswapV2PairContext = /*#__PURE__*/React.createContext(emptyContract);\nexport const UniswapV2Router02Context = /*#__PURE__*/React.createContext(emptyContract);\nexport const ERC20PresetMinterPauserContext = /*#__PURE__*/React.createContext(emptyContract);\nexport const ERC20Context = /*#__PURE__*/React.createContext(emptyContract);\nexport const Symfoni = ({\n  showLoading = true,\n  autoInit = true,\n  ...props\n}) => {\n  _s();\n\n  const [initializeCounter, setInitializeCounter] = useState(0);\n  const [currentHardhatProvider, setCurrentHardhatProvider] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [signer, setSigner] = useState(defaultSigner);\n  const [provider, setProvider] = useState(defaultProvider);\n  const [currentAddress, setCurrentAddress] = useState(defaultCurrentAddress);\n  const [fallbackProvider] = useState(undefined);\n  const [providerPriority, setProviderPriority] = useState([\"web3modal\", \"hardhat\"]);\n  const [MyToken1, setMyToken1] = useState(emptyContract);\n  const [MyToken2, setMyToken2] = useState(emptyContract);\n  const [UniswapV2ERC20, setUniswapV2ERC20] = useState(emptyContract);\n  const [UniswapV2Factory, setUniswapV2Factory] = useState(emptyContract);\n  const [UniswapV2Pair, setUniswapV2Pair] = useState(emptyContract);\n  const [UniswapV2Router02, setUniswapV2Router02] = useState(emptyContract);\n  const [ERC20PresetMinterPauser, setERC20PresetMinterPauser] = useState(emptyContract);\n  const [ERC20, setERC20] = useState(emptyContract);\n  useEffect(() => {\n    if (messages.length > 0) console.debug(messages.pop());\n  }, [messages]);\n\n  const getProvider = async () => {\n    let hardhatProviderName = \"Not set\";\n    let _providerPriority = [...providerPriority]; // Fallback provider\n\n    if (fallbackProvider && autoInit && initializeCounter === 0) {\n      if (localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\") === null) {\n        _providerPriority = _providerPriority.sort((a, b) => {\n          return a === fallbackProvider ? -1 : b === fallbackProvider ? 1 : 0;\n        });\n      }\n    }\n\n    const provider = await _providerPriority.reduce(async (maybeProvider, providerIdentification) => {\n      let foundProvider = await maybeProvider;\n\n      if (foundProvider) {\n        return Promise.resolve(foundProvider);\n      } else {\n        switch (providerIdentification.toLowerCase()) {\n          case \"web3modal\":\n            try {\n              const provider = await getWeb3ModalProvider();\n              const web3provider = new ethers.providers.Web3Provider(provider);\n              hardhatProviderName = \"web3modal\";\n              return Promise.resolve(web3provider);\n            } catch (error) {\n              return Promise.resolve(undefined);\n            }\n\n          case \"hardhat\":\n            try {\n              const provider = new ethers.providers.JsonRpcProvider({\n                url: \"http://127.0.0.1:8545\"\n              });\n              hardhatProviderName = \"hardhat\";\n              return Promise.resolve(provider);\n            } catch (error) {\n              return Promise.resolve(undefined);\n            }\n\n          default:\n            return Promise.resolve(undefined);\n        }\n      }\n    }, Promise.resolve(undefined)); // end reduce\n\n    return provider ? {\n      provider,\n      hardhatProviderName\n    } : undefined;\n  };\n\n  const getSigner = async (_provider, hardhatProviderName) => {\n    switch (hardhatProviderName) {\n      case \"web3modal\":\n        const web3provider = _provider;\n        return await web3provider.getSigner();\n\n      case \"hardhat\":\n        return ethers.Wallet.fromMnemonic(\"undefined\").connect(_provider);\n\n      default:\n        return undefined;\n    }\n  };\n\n  const getWeb3ModalProvider = async () => {\n    const providerOptions = {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId: \"919cb82452e545e68beb41593360ead3\"\n        }\n      }\n    };\n    const web3Modal = new Web3Modal({\n      // network: \"mainnet\",\n      cacheProvider: false,\n      providerOptions // required\n\n    });\n    return await web3Modal.connect();\n  };\n\n  useEffect(() => {\n    let subscribed = true;\n\n    const doAsync = async () => {\n      const finish = text => {\n        setLoading(false);\n        setMessages(old => [...old, text]);\n      };\n\n      const finishWithContracts = text => {\n        setMyToken1(getMyToken1(_provider, _signer));\n        setMyToken2(getMyToken2(_provider, _signer));\n        setUniswapV2ERC20(getUniswapV2ERC20(_provider, _signer));\n        setUniswapV2Factory(getUniswapV2Factory(_provider, _signer));\n        setUniswapV2Pair(getUniswapV2Pair(_provider, _signer));\n        setUniswapV2Router02(getUniswapV2Router02(_provider, _signer));\n        setERC20PresetMinterPauser(getERC20PresetMinterPauser(_provider, _signer));\n        setERC20(getERC20(_provider, _signer));\n        finish(text);\n      };\n\n      if (!autoInit && initializeCounter === 0) return finish(\"Auto init turned off.\");\n      setLoading(true);\n      setMessages(old => [...old, \"Initiating Symfoni React\"]);\n      const providerObject = await getProvider(); // getProvider can actually return undefined, see issue https://github.com/microsoft/TypeScript/issues/11094\n\n      if (!subscribed || !providerObject) return finish(\"No provider or signer.\");\n      const _provider = providerObject.provider;\n      setProvider(_provider);\n      setMessages(old => [...old, \"Useing \" + providerObject.hardhatProviderName]);\n      setCurrentHardhatProvider(providerObject.hardhatProviderName);\n\n      const _signer = await getSigner(_provider, providerObject.hardhatProviderName);\n\n      if (!subscribed || !_signer) return finishWithContracts(\"Provider, without signer.\");\n      setSigner(_signer);\n      setMessages(old => [...old, \"Useing signer\"]);\n      const address = await _signer.getAddress();\n      if (!subscribed || !address) return finishWithContracts(\"Provider and signer, without address.\");\n      setCurrentAddress(address);\n      return finishWithContracts(\"Completed Symfoni context initialization.\");\n    };\n\n    doAsync();\n    return () => {\n      subscribed = false;\n    };\n  }, [initializeCounter]);\n\n  const getMyToken1 = (_provider, _signer) => {\n    const contractAddress = \"0xbA04725116854CF83e7C841DCFF7e9E32CE48A78\";\n    const instance = _signer ? MyToken1__factory.connect(contractAddress, _signer) : MyToken1__factory.connect(contractAddress, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new MyToken1__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const getMyToken2 = (_provider, _signer) => {\n    const contractAddress = \"0x99c98ADab1Fd2A77f5C394153A20c9Db6D9d393a\";\n    const instance = _signer ? MyToken2__factory.connect(contractAddress, _signer) : MyToken2__factory.connect(contractAddress, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new MyToken2__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const getUniswapV2ERC20 = (_provider, _signer) => {\n    let instance = _signer ? UniswapV2ERC20__factory.connect(ethers.constants.AddressZero, _signer) : UniswapV2ERC20__factory.connect(ethers.constants.AddressZero, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new UniswapV2ERC20__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const getUniswapV2Factory = (_provider, _signer) => {\n    const contractAddress = \"0x700CCA7F7506e17Add610Dc715D1Ba55584C45A6\";\n    const instance = _signer ? UniswapV2Factory__factory.connect(contractAddress, _signer) : UniswapV2Factory__factory.connect(contractAddress, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new UniswapV2Factory__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const getUniswapV2Pair = (_provider, _signer) => {\n    let instance = _signer ? UniswapV2Pair__factory.connect(ethers.constants.AddressZero, _signer) : UniswapV2Pair__factory.connect(ethers.constants.AddressZero, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new UniswapV2Pair__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const getUniswapV2Router02 = (_provider, _signer) => {\n    const contractAddress = \"0xd575E92afecFF11346b7023F96CdB0a3eD41fe48\";\n    const instance = _signer ? UniswapV2Router02__factory.connect(contractAddress, _signer) : UniswapV2Router02__factory.connect(contractAddress, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new UniswapV2Router02__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const getERC20PresetMinterPauser = (_provider, _signer) => {\n    let instance = _signer ? ERC20PresetMinterPauser__factory.connect(ethers.constants.AddressZero, _signer) : ERC20PresetMinterPauser__factory.connect(ethers.constants.AddressZero, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new ERC20PresetMinterPauser__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const getERC20 = (_provider, _signer) => {\n    let instance = _signer ? ERC20__factory.connect(ethers.constants.AddressZero, _signer) : ERC20__factory.connect(ethers.constants.AddressZero, _provider);\n    const contract = {\n      instance: instance,\n      factory: _signer ? new ERC20__factory(_signer) : undefined\n    };\n    return contract;\n  };\n\n  const handleInitProvider = provider => {\n    if (provider) {\n      setProviderPriority(old => old.sort((a, b) => {\n        return a === provider ? -1 : b === provider ? 1 : 0;\n      }));\n    }\n\n    setInitializeCounter(initializeCounter + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SymfoniContext.Provider, {\n    value: {\n      init: provider => handleInitProvider(provider),\n      providers: providerPriority,\n      currentHardhatProvider,\n      loading,\n      messages\n    },\n    children: /*#__PURE__*/_jsxDEV(ProviderContext.Provider, {\n      value: [provider, setProvider],\n      children: /*#__PURE__*/_jsxDEV(SignerContext.Provider, {\n        value: [signer, setSigner],\n        children: /*#__PURE__*/_jsxDEV(CurrentAddressContext.Provider, {\n          value: [currentAddress, setCurrentAddress],\n          children: /*#__PURE__*/_jsxDEV(MyToken1Context.Provider, {\n            value: MyToken1,\n            children: /*#__PURE__*/_jsxDEV(MyToken2Context.Provider, {\n              value: MyToken2,\n              children: /*#__PURE__*/_jsxDEV(UniswapV2ERC20Context.Provider, {\n                value: UniswapV2ERC20,\n                children: /*#__PURE__*/_jsxDEV(UniswapV2FactoryContext.Provider, {\n                  value: UniswapV2Factory,\n                  children: /*#__PURE__*/_jsxDEV(UniswapV2PairContext.Provider, {\n                    value: UniswapV2Pair,\n                    children: /*#__PURE__*/_jsxDEV(UniswapV2Router02Context.Provider, {\n                      value: UniswapV2Router02,\n                      children: /*#__PURE__*/_jsxDEV(ERC20PresetMinterPauserContext.Provider, {\n                        value: ERC20PresetMinterPauser,\n                        children: /*#__PURE__*/_jsxDEV(ERC20Context.Provider, {\n                          value: ERC20,\n                          children: showLoading && loading ? props.loadingComponent ? props.loadingComponent : /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: msg\n                            }, i, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 355,\n                              columnNumber: 73\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 353,\n                            columnNumber: 67\n                          }, this) : props.children\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Symfoni, \"SvoPDffV4ElU1D7Wwt+av/Nlghw=\");\n\n_c = Symfoni;\n\nvar _c;\n\n$RefreshReg$(_c, \"Symfoni\");","map":{"version":3,"sources":["/home/tivtan/Desktop/DEX/hardhat-react-boilerplate/frontend/src/hardhat/SymfoniContext.tsx"],"names":["ethers","React","useEffect","useState","Web3Modal","MyToken1__factory","MyToken2__factory","UniswapV2ERC20__factory","UniswapV2Factory__factory","UniswapV2Pair__factory","UniswapV2Router02__factory","ERC20PresetMinterPauser__factory","ERC20__factory","WalletConnectProvider","emptyContract","instance","undefined","factory","defaultProvider","ProviderContext","createContext","defaultCurrentAddress","CurrentAddressContext","defaultSigner","SignerContext","defaultSymfoniContext","currentHardhatProvider","init","Error","loading","messages","providers","SymfoniContext","MyToken1Context","MyToken2Context","UniswapV2ERC20Context","UniswapV2FactoryContext","UniswapV2PairContext","UniswapV2Router02Context","ERC20PresetMinterPauserContext","ERC20Context","Symfoni","showLoading","autoInit","props","initializeCounter","setInitializeCounter","setCurrentHardhatProvider","setLoading","setMessages","signer","setSigner","provider","setProvider","currentAddress","setCurrentAddress","fallbackProvider","providerPriority","setProviderPriority","MyToken1","setMyToken1","MyToken2","setMyToken2","UniswapV2ERC20","setUniswapV2ERC20","UniswapV2Factory","setUniswapV2Factory","UniswapV2Pair","setUniswapV2Pair","UniswapV2Router02","setUniswapV2Router02","ERC20PresetMinterPauser","setERC20PresetMinterPauser","ERC20","setERC20","length","console","debug","pop","getProvider","hardhatProviderName","_providerPriority","localStorage","getItem","sort","a","b","reduce","maybeProvider","providerIdentification","foundProvider","Promise","resolve","toLowerCase","getWeb3ModalProvider","web3provider","Web3Provider","error","JsonRpcProvider","url","getSigner","_provider","Wallet","fromMnemonic","connect","providerOptions","walletconnect","package","options","infuraId","web3Modal","cacheProvider","subscribed","doAsync","finish","text","old","finishWithContracts","getMyToken1","_signer","getMyToken2","getUniswapV2ERC20","getUniswapV2Factory","getUniswapV2Pair","getUniswapV2Router02","getERC20PresetMinterPauser","getERC20","providerObject","address","getAddress","contractAddress","contract","constants","AddressZero","handleInitProvider","loadingComponent","map","msg","i","children"],"mappings":"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","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { providers, Signer, ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3Modal, { IProviderOptions } from \"web3modal\";\nimport { MyToken1 } from \"./typechain/MyToken1\";\nimport { MyToken1__factory } from \"./typechain/factories/MyToken1__factory\";\nimport { MyToken2 } from \"./typechain/MyToken2\";\nimport { MyToken2__factory } from \"./typechain/factories/MyToken2__factory\";\nimport { UniswapV2ERC20 } from \"./typechain/UniswapV2ERC20\";\nimport { UniswapV2ERC20__factory } from \"./typechain/factories/UniswapV2ERC20__factory\";\nimport { UniswapV2Factory } from \"./typechain/UniswapV2Factory\";\nimport { UniswapV2Factory__factory } from \"./typechain/factories/UniswapV2Factory__factory\";\nimport { UniswapV2Pair } from \"./typechain/UniswapV2Pair\";\nimport { UniswapV2Pair__factory } from \"./typechain/factories/UniswapV2Pair__factory\";\nimport { UniswapV2Router02 } from \"./typechain/UniswapV2Router02\";\nimport { UniswapV2Router02__factory } from \"./typechain/factories/UniswapV2Router02__factory\";\nimport { ERC20PresetMinterPauser } from \"./typechain/ERC20PresetMinterPauser\";\nimport { ERC20PresetMinterPauser__factory } from \"./typechain/factories/ERC20PresetMinterPauser__factory\";\nimport { ERC20 } from \"./typechain/ERC20\";\nimport { ERC20__factory } from \"./typechain/factories/ERC20__factory\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nconst emptyContract = {\n    instance: undefined,\n    factory: undefined\n};\nconst defaultProvider: providers.Provider | undefined = undefined;\nexport const ProviderContext = React.createContext<[providers.Provider | undefined, React.Dispatch<React.SetStateAction<providers.Provider | undefined>>]>([defaultProvider, () => { }]);\nconst defaultCurrentAddress: string = \"\";\nexport const CurrentAddressContext = React.createContext<[string, React.Dispatch<React.SetStateAction<string>>]>([defaultCurrentAddress, () => { }]);\nconst defaultSigner: Signer | undefined = undefined;\nexport const SignerContext = React.createContext<[Signer | undefined, React.Dispatch<React.SetStateAction<Signer | undefined>>]>([defaultSigner, () => { }]);\nconst defaultSymfoniContext: SymfoniContextInterface = {\n    currentHardhatProvider: \"\",\n    init: () => { throw Error(\"Symfoni context not initialized\") },\n    loading: false,\n    messages: [],\n    providers: []\n};\nexport const SymfoniContext = React.createContext<SymfoniContextInterface>(defaultSymfoniContext);\nexport const MyToken1Context = React.createContext<SymfoniMyToken1>(emptyContract);\nexport const MyToken2Context = React.createContext<SymfoniMyToken2>(emptyContract);\nexport const UniswapV2ERC20Context = React.createContext<SymfoniUniswapV2ERC20>(emptyContract);\nexport const UniswapV2FactoryContext = React.createContext<SymfoniUniswapV2Factory>(emptyContract);\nexport const UniswapV2PairContext = React.createContext<SymfoniUniswapV2Pair>(emptyContract);\nexport const UniswapV2Router02Context = React.createContext<SymfoniUniswapV2Router02>(emptyContract);\nexport const ERC20PresetMinterPauserContext = React.createContext<SymfoniERC20PresetMinterPauser>(emptyContract);\nexport const ERC20Context = React.createContext<SymfoniERC20>(emptyContract);\n\nexport interface SymfoniContextInterface {\n    init: (provider?: string) => void;\n    loading: boolean;\n    messages: string[];\n    currentHardhatProvider: string;\n    providers: string[];\n}\n\nexport interface SymfoniProps {\n    autoInit?: boolean;\n    showLoading?: boolean;\n    loadingComponent?: React.ReactNode;\n}\n\nexport interface SymfoniMyToken1 {\n    instance?: MyToken1;\n    factory?: MyToken1__factory;\n}\n\nexport interface SymfoniMyToken2 {\n    instance?: MyToken2;\n    factory?: MyToken2__factory;\n}\n\nexport interface SymfoniUniswapV2ERC20 {\n    instance?: UniswapV2ERC20;\n    factory?: UniswapV2ERC20__factory;\n}\n\nexport interface SymfoniUniswapV2Factory {\n    instance?: UniswapV2Factory;\n    factory?: UniswapV2Factory__factory;\n}\n\nexport interface SymfoniUniswapV2Pair {\n    instance?: UniswapV2Pair;\n    factory?: UniswapV2Pair__factory;\n}\n\nexport interface SymfoniUniswapV2Router02 {\n    instance?: UniswapV2Router02;\n    factory?: UniswapV2Router02__factory;\n}\n\nexport interface SymfoniERC20PresetMinterPauser {\n    instance?: ERC20PresetMinterPauser;\n    factory?: ERC20PresetMinterPauser__factory;\n}\n\nexport interface SymfoniERC20 {\n    instance?: ERC20;\n    factory?: ERC20__factory;\n}\n\nexport const Symfoni: React.FC<SymfoniProps> = ({\n    showLoading = true,\n    autoInit = true,\n    ...props\n}) => {\n    const [initializeCounter, setInitializeCounter] = useState(0);\n    const [currentHardhatProvider, setCurrentHardhatProvider] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState<string[]>([]);\n    const [signer, setSigner] = useState<Signer | undefined>(defaultSigner);\n    const [provider, setProvider] = useState<providers.Provider | undefined>(defaultProvider);\n    const [currentAddress, setCurrentAddress] = useState<string>(defaultCurrentAddress);\n    const [fallbackProvider] = useState<string | undefined>(undefined);\n    const [providerPriority, setProviderPriority] = useState<string[]>([\"web3modal\", \"hardhat\"]);\n    const [MyToken1, setMyToken1] = useState<SymfoniMyToken1>(emptyContract);\n    const [MyToken2, setMyToken2] = useState<SymfoniMyToken2>(emptyContract);\n    const [UniswapV2ERC20, setUniswapV2ERC20] = useState<SymfoniUniswapV2ERC20>(emptyContract);\n    const [UniswapV2Factory, setUniswapV2Factory] = useState<SymfoniUniswapV2Factory>(emptyContract);\n    const [UniswapV2Pair, setUniswapV2Pair] = useState<SymfoniUniswapV2Pair>(emptyContract);\n    const [UniswapV2Router02, setUniswapV2Router02] = useState<SymfoniUniswapV2Router02>(emptyContract);\n    const [ERC20PresetMinterPauser, setERC20PresetMinterPauser] = useState<SymfoniERC20PresetMinterPauser>(emptyContract);\n    const [ERC20, setERC20] = useState<SymfoniERC20>(emptyContract);\n    useEffect(() => {\n        if (messages.length > 0)\n            console.debug(messages.pop())\n    }, [messages])\n\n    const getProvider = async (): Promise<{ provider: providers.Provider, hardhatProviderName: string } | undefined> => {\n        let hardhatProviderName = \"Not set\";\n        let _providerPriority = [...providerPriority];\n        // Fallback provider\n        if (fallbackProvider && autoInit && initializeCounter === 0) {\n            if (localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\") === null) {\n                _providerPriority = _providerPriority.sort((a, b) => {\n                    return a === fallbackProvider ? -1 : b === fallbackProvider ? 1 : 0;\n                })\n            }\n        }\n        const provider = await _providerPriority.reduce(async (maybeProvider: Promise<providers.Provider | undefined>, providerIdentification) => {\n            let foundProvider = await maybeProvider\n            if (foundProvider) {\n                return Promise.resolve(foundProvider)\n            }\n            else {\n                switch (providerIdentification.toLowerCase()) {\n                    case \"web3modal\":\n                        try {\n                            const provider = await getWeb3ModalProvider()\n                            const web3provider = new ethers.providers.Web3Provider(provider);\n                            hardhatProviderName = \"web3modal\";\n                            return Promise.resolve(web3provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        }\n                    case \"hardhat\":\n                        try {\n                            const provider = new ethers.providers.JsonRpcProvider({\n                                url: \"http://127.0.0.1:8545\",\n                            });\n                            hardhatProviderName = \"hardhat\";\n                            return Promise.resolve(provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        } default:\n                        return Promise.resolve(undefined)\n                }\n            }\n        }, Promise.resolve(undefined)) // end reduce\n        return provider ? { provider, hardhatProviderName } : undefined\n    };\n    const getSigner = async (_provider: providers.Provider, hardhatProviderName: string): Promise<Signer | undefined> => {\n        switch (hardhatProviderName) {\n            case \"web3modal\":\n                const web3provider = _provider as ethers.providers.Web3Provider\n                return await web3provider.getSigner()\n            case \"hardhat\":\n                return ethers.Wallet.fromMnemonic(\"undefined\").connect(_provider)\n            default:\n                return undefined\n        }\n    };\n    const getWeb3ModalProvider = async (): Promise<any> => {\n        const providerOptions: IProviderOptions = {\n            walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                    infuraId: \"919cb82452e545e68beb41593360ead3\"\n                }\n            }\n        };\n        const web3Modal = new Web3Modal({\n            // network: \"mainnet\",\n            cacheProvider: false,\n            providerOptions, // required\n        });\n        return await web3Modal.connect();\n    };\n\n    useEffect(() => {\n        let subscribed = true\n        const doAsync = async () => {\n            const finish = (text: string) => {\n                setLoading(false)\n                setMessages(old => [...old, text])\n            }\n            const finishWithContracts = (text: string) => {\n                setMyToken1(getMyToken1(_provider, _signer))\n                setMyToken2(getMyToken2(_provider, _signer))\n                setUniswapV2ERC20(getUniswapV2ERC20(_provider, _signer))\n                setUniswapV2Factory(getUniswapV2Factory(_provider, _signer))\n                setUniswapV2Pair(getUniswapV2Pair(_provider, _signer))\n                setUniswapV2Router02(getUniswapV2Router02(_provider, _signer))\n                setERC20PresetMinterPauser(getERC20PresetMinterPauser(_provider, _signer))\n                setERC20(getERC20(_provider, _signer))\n                finish(text)\n            }\n            if (!autoInit && initializeCounter === 0) return finish(\"Auto init turned off.\")\n            setLoading(true)\n            setMessages(old => [...old, \"Initiating Symfoni React\"])\n            const providerObject = await getProvider() // getProvider can actually return undefined, see issue https://github.com/microsoft/TypeScript/issues/11094\n\n            if (!subscribed || !providerObject) return finish(\"No provider or signer.\")\n            const _provider = providerObject.provider\n            setProvider(_provider)\n            setMessages(old => [...old, \"Useing \" + providerObject.hardhatProviderName])\n            setCurrentHardhatProvider(providerObject.hardhatProviderName)\n            const _signer = await getSigner(_provider, providerObject.hardhatProviderName);\n\n            if (!subscribed || !_signer) return finishWithContracts(\"Provider, without signer.\")\n            setSigner(_signer)\n            setMessages(old => [...old, \"Useing signer\"])\n            const address = await _signer.getAddress()\n\n            if (!subscribed || !address) return finishWithContracts(\"Provider and signer, without address.\")\n            setCurrentAddress(address)\n\n            return finishWithContracts(\"Completed Symfoni context initialization.\")\n        };\n        doAsync();\n        return () => { subscribed = false }\n    }, [initializeCounter])\n\n    const getMyToken1 = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0xbA04725116854CF83e7C841DCFF7e9E32CE48A78\"\n        const instance = _signer ? MyToken1__factory.connect(contractAddress, _signer) : MyToken1__factory.connect(contractAddress, _provider)\n        const contract: SymfoniMyToken1 = {\n            instance: instance,\n            factory: _signer ? new MyToken1__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getMyToken2 = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0x99c98ADab1Fd2A77f5C394153A20c9Db6D9d393a\"\n        const instance = _signer ? MyToken2__factory.connect(contractAddress, _signer) : MyToken2__factory.connect(contractAddress, _provider)\n        const contract: SymfoniMyToken2 = {\n            instance: instance,\n            factory: _signer ? new MyToken2__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2ERC20 = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? UniswapV2ERC20__factory.connect(ethers.constants.AddressZero, _signer) : UniswapV2ERC20__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniUniswapV2ERC20 = {\n            instance: instance,\n            factory: _signer ? new UniswapV2ERC20__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2Factory = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0x700CCA7F7506e17Add610Dc715D1Ba55584C45A6\"\n        const instance = _signer ? UniswapV2Factory__factory.connect(contractAddress, _signer) : UniswapV2Factory__factory.connect(contractAddress, _provider)\n        const contract: SymfoniUniswapV2Factory = {\n            instance: instance,\n            factory: _signer ? new UniswapV2Factory__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2Pair = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? UniswapV2Pair__factory.connect(ethers.constants.AddressZero, _signer) : UniswapV2Pair__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniUniswapV2Pair = {\n            instance: instance,\n            factory: _signer ? new UniswapV2Pair__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2Router02 = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0xd575E92afecFF11346b7023F96CdB0a3eD41fe48\"\n        const instance = _signer ? UniswapV2Router02__factory.connect(contractAddress, _signer) : UniswapV2Router02__factory.connect(contractAddress, _provider)\n        const contract: SymfoniUniswapV2Router02 = {\n            instance: instance,\n            factory: _signer ? new UniswapV2Router02__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getERC20PresetMinterPauser = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? ERC20PresetMinterPauser__factory.connect(ethers.constants.AddressZero, _signer) : ERC20PresetMinterPauser__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniERC20PresetMinterPauser = {\n            instance: instance,\n            factory: _signer ? new ERC20PresetMinterPauser__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getERC20 = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? ERC20__factory.connect(ethers.constants.AddressZero, _signer) : ERC20__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniERC20 = {\n            instance: instance,\n            factory: _signer ? new ERC20__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n\n    const handleInitProvider = (provider?: string) => {\n        if (provider) {\n            setProviderPriority(old => old.sort((a, b) => {\n                return a === provider ? -1 : b === provider ? 1 : 0;\n            }))\n        }\n        setInitializeCounter(initializeCounter + 1)\n    }\n    return (\n        <SymfoniContext.Provider value={{ init: (provider) => handleInitProvider(provider), providers: providerPriority, currentHardhatProvider, loading, messages }}>\n            <ProviderContext.Provider value={[provider, setProvider]}>\n                <SignerContext.Provider value={[signer, setSigner]}>\n                    <CurrentAddressContext.Provider value={[currentAddress, setCurrentAddress]}>\n                        <MyToken1Context.Provider value={MyToken1}>\n                            <MyToken2Context.Provider value={MyToken2}>\n                                <UniswapV2ERC20Context.Provider value={UniswapV2ERC20}>\n                                    <UniswapV2FactoryContext.Provider value={UniswapV2Factory}>\n                                        <UniswapV2PairContext.Provider value={UniswapV2Pair}>\n                                            <UniswapV2Router02Context.Provider value={UniswapV2Router02}>\n                                                <ERC20PresetMinterPauserContext.Provider value={ERC20PresetMinterPauser}>\n                                                    <ERC20Context.Provider value={ERC20}>\n                                                        {showLoading && loading ?\n                                                            props.loadingComponent\n                                                                ? props.loadingComponent\n                                                                : <div>\n                                                                    {messages.map((msg, i) => (\n                                                                        <p key={i}>{msg}</p>\n                                                                    ))}\n                                                                </div>\n                                                            : props.children\n                                                        }\n                                                    </ERC20Context.Provider >\n                                                </ERC20PresetMinterPauserContext.Provider >\n                                            </UniswapV2Router02Context.Provider >\n                                        </UniswapV2PairContext.Provider >\n                                    </UniswapV2FactoryContext.Provider >\n                                </UniswapV2ERC20Context.Provider >\n                            </MyToken2Context.Provider >\n                        </MyToken1Context.Provider >\n                    </CurrentAddressContext.Provider>\n                </SignerContext.Provider>\n            </ProviderContext.Provider>\n        </SymfoniContext.Provider>\n    )\n\n};\n"]},"metadata":{},"sourceType":"module"}