{"ast":null,"code":"var _jsxFileName = \"/home/tivtan/Desktop/DEX/hardhat-react-boilerplate/frontend/src/components/Swap.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ERC20Context, UniswapV2Router02Context, CurrentAddressContext } from \"../hardhat/SymfoniContext\";\nimport ethers from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Swap = ({\n  tokenA,\n  tokenB\n}) => {\n  _s();\n\n  const ERC20Factory = useContext(ERC20Context);\n  const [tokenAInstance, setTokenAInstance] = useState();\n  const [tokenBInstance, setTokenBInstance] = useState();\n  const [tokenASymbol, setTokenASymbol] = useState();\n  const [tokenBSymbol, setTokenBSymbol] = useState();\n  const [amount, setAmount] = useState(0);\n\n  const handleAmountChange = event => {\n    setAmount(parseInt(event.target.value));\n  };\n\n  const router = useContext(UniswapV2Router02Context);\n  const [exchangeAmount, setExchangeAmount] = useState(\"0\");\n  useEffect(() => {\n    if (ERC20Factory.instance) {\n      setTokenAInstance(ERC20Factory.instance.attach(tokenA));\n      setTokenBInstance(ERC20Factory.instance.attach(tokenB));\n    }\n\n    const fetchTokenSymbols = async () => {\n      if (!tokenAInstance || !tokenBInstance) return;\n      setTokenASymbol(await tokenAInstance.symbol());\n      setTokenBSymbol(await tokenBInstance.symbol());\n    };\n\n    fetchTokenSymbols();\n  }, [ERC20Factory.instance, tokenA, tokenB]);\n  useEffect(() => {\n    const fetchExchangeAmount = async () => {\n      if (!router.instance) {\n        console.log(\"router instance not found\");\n        return;\n      }\n\n      if (amount > 0) {\n        // router gets angry if you pass in a 0\n        const amountsOut = await router.instance.getAmountsOut(ethers.utils.parseEther(amount.toString()), [tokenA, tokenB]);\n        setExchangeAmount(ethers.utils.formatUnits(amountsOut[1].toString(), 18));\n      }\n    };\n\n    fetchExchangeAmount();\n  }, [router.instance, amount, tokenA, tokenB]);\n  const [currentAddress, setCurrentAddress] = useContext(CurrentAddressContext);\n\n  const handleSwap = async () => {\n    if (!router.instance || !tokenAInstance) {\n      console.log(\"Error. Router or token instance not found.\");\n      return;\n    }\n\n    const time = Math.floor(Date.now() / 1000) + 3600;\n    await (await tokenAInstance.approve(router.instance.address, ethers.utils.parseEther(amount.toString()))).wait();\n    await (await router.instance.swapExactTokensForTokens(ethers.utils.parseEther(amount.toString()), 0, // normally its not 0\n    [tokenA, tokenB], currentAddress, time)).wait();\n  };\n\n  let z = Number(exchangeAmount) / Number(amount);\n  var rate = z.toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-red-400 p-6 shadow sm:rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 py-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-6 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex text-gray-800 text-3xl\",\n          children: [\" \", tokenASymbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex text-gray-800 text-3xl\",\n          children: [\" \", '--->', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex text-gray-800 text-3xl\",\n          children: tokenBSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex-item text-gray-800 text-2xl\",\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"Amount\",\n            id: \"amount\",\n            className: \"w-28 rounded\",\n            min: \"0.01\",\n            step: \"0.01\",\n            placeholder: \"0\",\n            onChange: handleAmountChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex-item text-gray-800 text-2xl\",\n            children: \"Receive:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Receive\",\n            id: \"receive\",\n            disabled: true,\n            className: \"w-28 rounded\",\n            value: exchangeAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-3 inline-flex items-center justify-center px-3 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-gray-800 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\",\n          onClick: handleSwap,\n          children: \"Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-500 shadow sm:rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-5 py-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-4 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-800 text-2xl\",\n            children: \" Connected Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-800 text-2xl\",\n            children: [\" \", currentAddress, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black shadow sm:rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-5 py-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-4 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-2xl\",\n            children: \" Exchange Rate: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-2xl\",\n            children: [\" \", rate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Swap, \"KzMtioXgz1p5ri9uCkGF1O9aOgU=\");\n\n_c = Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/home/tivtan/Desktop/DEX/hardhat-react-boilerplate/frontend/src/components/Swap.tsx"],"names":["React","useContext","useEffect","useState","ERC20Context","UniswapV2Router02Context","CurrentAddressContext","ethers","Swap","tokenA","tokenB","ERC20Factory","tokenAInstance","setTokenAInstance","tokenBInstance","setTokenBInstance","tokenASymbol","setTokenASymbol","tokenBSymbol","setTokenBSymbol","amount","setAmount","handleAmountChange","event","parseInt","target","value","router","exchangeAmount","setExchangeAmount","instance","attach","fetchTokenSymbols","symbol","fetchExchangeAmount","console","log","amountsOut","getAmountsOut","utils","parseEther","toString","formatUnits","currentAddress","setCurrentAddress","handleSwap","time","Math","floor","Date","now","approve","address","wait","swapExactTokensForTokens","z","Number","rate","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { ERC20Context, UniswapV2Router02Context, CurrentAddressContext } from \"../hardhat/SymfoniContext\";\nimport { ERC20 } from \"../hardhat/typechain/ERC20\";\nimport ethers from \"ethers\";\n\ninterface Props {\n    tokenA: string;\n    tokenB: string;\n}\n\nexport const Swap: React.FC<Props> = ({ tokenA, tokenB }) => {\n    const ERC20Factory = useContext(ERC20Context);\n\n\n    const [tokenAInstance, setTokenAInstance] = useState<ERC20>();\n    const [tokenBInstance, setTokenBInstance] = useState<ERC20>();\n\n    const [tokenASymbol, setTokenASymbol] = useState<string>();\n    const [tokenBSymbol, setTokenBSymbol] = useState<string>();\n\n    const [amount, setAmount] = useState<number>(0);\n\n    const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAmount(parseInt(event.target.value));\n    };\n    const router = useContext(UniswapV2Router02Context);\n    const [exchangeAmount, setExchangeAmount] = useState<string>(\"0\");\n\n\n\n\n    useEffect(() => {\n        if (ERC20Factory.instance) {\n            setTokenAInstance(ERC20Factory.instance!.attach(tokenA));\n            setTokenBInstance(ERC20Factory.instance!.attach(tokenB));\n        }\n\n        const fetchTokenSymbols = async () => {\n            if (!tokenAInstance || !tokenBInstance) return;\n\n            setTokenASymbol(await tokenAInstance.symbol());\n            setTokenBSymbol(await tokenBInstance.symbol());\n        };\n        fetchTokenSymbols();\n    }, [ERC20Factory.instance, tokenA, tokenB]);\n\n    useEffect(() => {\n        const fetchExchangeAmount = async () => {\n            if (!router.instance) {\n                console.log(\"router instance not found\");\n                return;\n            }\n\n            if (amount > 0) {\n                // router gets angry if you pass in a 0\n                const amountsOut = await router.instance.getAmountsOut(\n                    ethers.utils.parseEther(amount.toString()),\n                    [tokenA, tokenB]\n                );\n                setExchangeAmount(ethers.utils.formatUnits(amountsOut[1].toString(), 18));\n            }\n        };\n        fetchExchangeAmount();\n\n    }, [router.instance, amount, tokenA, tokenB]);\n\n\n\n    const [currentAddress, setCurrentAddress] = useContext(CurrentAddressContext);\n\n    const handleSwap = async () => {\n        if (!router.instance || !tokenAInstance) {\n            console.log(\"Error. Router or token instance not found.\");\n            return;\n        }\n        const time = Math.floor(Date.now() / 1000) + 3600;\n\n        await (await tokenAInstance.approve(router.instance.address, ethers.utils.parseEther(amount.toString())))\n            .wait();\n        await (await router.instance.swapExactTokensForTokens(\n            ethers.utils.parseEther(amount.toString()),\n            0, // normally its not 0\n            [tokenA, tokenB],\n            currentAddress,\n            time\n        )).wait();\n\n\n    };\n\n    let z = Number(exchangeAmount) / Number(amount);\n    var rate = z.toFixed(2);\n\n\n    return (\n        <div className=\"bg-red-400 p-6 shadow sm:rounded-lg\">\n            <div className=\"px-6 py-6\">\n                <div className=\"grid grid-cols-6 gap-6\">\n                    <div className=\"flex text-gray-800 text-3xl\"> {tokenASymbol}</div>\n                    <div className=\"flex text-gray-800 text-3xl\"> {'--->'} </div>\n                    <div className=\"flex text-gray-800 text-3xl\">{tokenBSymbol}</div>\n                    <div className=\"flex justify-center\">\n                        <span className=\"flex-item text-gray-800 text-2xl\">Amount:</span>\n                        <input\n                            type=\"number\"\n                            name=\"Amount\"\n                            id=\"amount\"\n                            className=\"w-28 rounded\"\n                            min=\"0.01\"\n                            step=\"0.01\"\n                            placeholder=\"0\"\n                            onChange={handleAmountChange}\n                        />\n                    </div>\n\n                    <div className=\"flex justify-center\">\n                        <span className=\"flex-item text-gray-800 text-2xl\">Receive:</span>\n                        <input\n                            type=\"text\"\n                            name=\"Receive\"\n                            id=\"receive\"\n                            disabled\n                            className=\"w-28 rounded\"\n                            value={exchangeAmount}\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"mt-3 inline-flex items-center justify-center px-3 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-gray-800 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                        onClick={handleSwap}\n                    >\n                        Swap\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"bg-red-500 shadow sm:rounded-lg\">\n                <div className=\"px-5 py-5\">\n                    <div className=\"grid grid-cols-4 gap-4\">\n                        <div className=\"text-gray-800 text-2xl\"> Connected Address: </div>\n                        <div className=\"text-gray-800 text-2xl\"> {currentAddress} </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"bg-black shadow sm:rounded-lg\">\n                <div className=\"px-5 py-5\">\n                    <div className=\"grid grid-cols-4 gap-4\">\n                        <div className=\"text-white text-2xl\"> Exchange Rate: </div>\n                        <div className=\"text-white text-2xl\"> {rate} </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}