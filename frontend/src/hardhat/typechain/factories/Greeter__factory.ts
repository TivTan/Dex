/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Greeter } from "../Greeter";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_greeting: string, overrides?: Overrides): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
    ],
    name: "setMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b13380380610b138339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b5060608101604052602280825261010b94509092509050610af160208301398261012560201b6103771760201c565b805161011e90600090602084019061025c565b50506102ef565b6102378282604051602401808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561016e578181015183820152602001610156565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101ce5781810151838201526020016101b6565b50505050905090810190601f1680156101fb5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03908116634b5c427760e01b1790915290955061023b169350505050565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061029d57805160ff19168380011785556102ca565b828001600101855582156102ca579182015b828111156102ca5782518255916020019190600101906102af565b506102d69291506102da565b5090565b5b808211156102d657600081556001016102db565b6107f3806102fe6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806326fae0d314610051578063a413686214610079578063cfae32171461011d578063ee97f7f31461019a575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166101be565b005b6100776004803603602081101561008f57600080fd5b810190602081018135600160201b8111156100a957600080fd5b8201836020820111156100bb57600080fd5b803590602001918460018302840111600160201b831117156100dc57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061020e945050505050565b6101256102d2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015f578181015183820152602001610147565b50505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a2610368565b604080516001600160a01b039092168252519081900360200190f35b6101ec60405180606001604052806021815260200161079d602191396001546001600160a01b031683610484565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6102bb60405180606001604052806023815260200161077a602391396000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b505050505083610551565b80516102ce9060009060208401906106e6565b5050565b60008054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b6001546001600160a01b031681565b6102ce8282604051602401808060200180602001838103835285818151815260200191508051906020019080838360005b838110156103c05781810151838201526020016103a8565b50505050905090810190601f1680156103ed5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610420578181015183820152602001610408565b50505050905090810190601f16801561044d5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905294506106c59350505050565b61054c8383836040516024018080602001846001600160a01b03168152602001836001600160a01b03168152602001828103825285818151815260200191508051906020019080838360005b838110156104e85781810151838201526020016104d0565b50505050905090810190601f1680156105155780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166307e763af60e51b17905294506106c59350505050565b505050565b61054c83838360405160240180806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561059f578181015183820152602001610587565b50505050905090810190601f1680156105cc5780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b838110156105ff5781810151838201526020016105e7565b50505050905090810190601f16801561062c5780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b8381101561065f578181015183820152602001610647565b50505050905090810190601f16801561068c5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b17905296506106c595505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061072757805160ff1916838001178555610754565b82800160010185558215610754579182015b82811115610754578251825591602001919060010190610739565b50610760929150610764565b5090565b5b80821115610760576000815560010161076556fe4368616e67696e67206772656574696e672066726f6d202725732720746f20272573274368616e67696e67206d61737465722066726f6d202725732720746f2027257327a264697066735822122054972384239df85180e937a8dc15775f3eebd7322d0b2712f35b5651b201c3b564736f6c634300060c00334465706c6f79696e67206120477265657465722077697468206772656574696e673a";
